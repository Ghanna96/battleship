{"version":3,"sources":["Game/shipFactory.js","Game/gameboard.js","Game/Player.js","utils/items.js","Components/Ship.jsx","Components/Marker.jsx","Components/Box.jsx","Components/Board.jsx","Components/CpuBoard.jsx","Components/Button.jsx","Components/Battleship.jsx","App.js","serviceWorker.js","index.js"],"names":["Ship","length","id","coords","vertical","hp","hit","isSunk","Gameboard","battlefield","board","i","xAxis","String","fromCharCode","j","push","index","X","Y","ship","createBoard","missedAttacks","availableMoves","filter","b","reduce","arr","ships","getBox","x","y","find","o","moveShip","placeShips","freshBoard","map","cell","resetShips","forEach","s","c","charCodeAt","char","findIndex","el","getIndex","canPlaceShip","box","randomPlacing","Math","floor","random","getBattlefield","receiveAttack","missed","allShipsSunk","every","autoFill","getShips","Player","moves","attack","opponent","result","randomAttack","itemTypes","SHIP","StyledShip","styled","div","props","isDragging","ShipC","useDrag","item","type","ItemTypes","canDrag","gameStarted","collect","monitor","drag","ref","onClick","StyledMarker","MarkerRow","MarkerCol","Marker","Fragment","StyledDiv","SunkShip","HitShip","span","StyledBox","StyledHitBox","StyledTd","td","Box","player","onHit","children","canPlace","useDrop","accept","canDrop","drop","console","log","isOver","gameOver","Row","tr","Table","table","Board","shipClick","field","renderBox","key","renderShip","rows","row","r","turn","CpuBoard","Wrapper","Play","a","disabled","Button","Battelfields","Header","header","Winner","Battleship","state","pBoard","cBoard","computer","playerTurn","attackBoard","bf","Object","assign","setState","computerAttacks","setTimeout","temp","handleShip","startGame","p","this","go1","go2","boards","getWinner","Component","App","DndProvider","backend","HTML5Backend","Boolean","window","location","hostname","match","GlobalStyle","createGlobalStyle","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.6a65791e.chunk.js","sourcesContent":["function Ship(length, id, coords, vertical) {\n\tlet hp = length;\n\n\tconst hit = () => {\n\t\t//mark position as \"hit\"\n\t\thp--;\n\t};\n\n\tconst isSunk = () => {\n\t\t// returns true if the ship is sunk\n\n\t\treturn hp === 0 ? true : false;\n\t};\n\treturn { length, hit, isSunk, id, vertical, coords };\n}\n\nexport default Ship;\n","import Ship from './shipFactory';\nfunction createBoard() {\n\tconst board = [];\n\tfor (let i = 0; i < 10; i++) {\n\t\tlet xAxis = String.fromCharCode(65 + i);\n\n\t\tfor (let j = 0; j < 10; j++) {\n\t\t\tboard.push({ index: [i, j], X: xAxis, Y: j + 1, hit: false, ship: null });\n\t\t}\n\t}\n\treturn board;\n}\n\nfunction Gameboard() {\n\tlet battlefield = createBoard();\n\tconst missedAttacks = [];\n\tconst availableMoves = () =>\n\t\tbattlefield\n\t\t\t.filter((b) => !b.hit)\n\t\t\t.reduce((arr, b) => {\n\t\t\t\tarr.push([b.X, b.Y]);\n\t\t\t\treturn arr;\n\t\t\t}, []);\n\tconst ships = [\n\t\tShip(4, 's1', ['A', 4], false),\n\t\tShip(2, 's2', ['C', 6], true),\n\t\tShip(4, 's3', ['A', 1], true),\n\t\tShip(1, 's4', ['D', 4], false),\n\t\tShip(1, 's5', ['G', 4], false),\n\t\tShip(2, 's6', ['H', 6], false),\n\t];\n\n\tconst getShips = () => ships;\n\tconst getIndex = (x, y) =>\n\t\tbattlefield.findIndex((el) => el.X === x && el.Y === y);\n\tconst getBattlefield = () => battlefield;\n\tconst missed = () => missedAttacks;\n\tconst getBox = (x, y) => battlefield.find((o) => o.X === x && o.Y === y);\n\n\t//reset the ship prop to null\n\tconst resetShips = () => {\n\t\tlet freshBoard = battlefield.map((cell) => {\n\t\t\tcell.ship = null;\n\t\t\treturn cell;\n\t\t});\n\t\tbattlefield = freshBoard;\n\t};\n\tconst moveShip = (ship, x, y) => {\n\t\tship.coords = [x, y];\n\t\tplaceShips();\n\t};\n\t//loop through ship arr and place ships on board\n\tconst placeShips = () => {\n\t\tresetShips();\n\t\tships.forEach((s) => {\n\t\t\tconst [x, y] = s.coords;\n\t\t\t//place ship vertically\n\t\t\tif (s.vertical) {\n\t\t\t\tlet c = x.charCodeAt(0);\n\t\t\t\tlet length = s.length;\n\t\t\t\tlet box;\n\n\t\t\t\tfor (let i = 0; i < length; i++) {\n\t\t\t\t\tlet char = String.fromCharCode(c);\n\t\t\t\t\tc++;\n\t\t\t\t\tbox = getBox(char, y);\n\t\t\t\t\tbox.ship = s;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t//place ship horizontally\n\t\t\t\tlet index = getIndex(x, y);\n\n\t\t\t\tfor (let i = 0; i < s.length; i++, index++) {\n\t\t\t\t\tbattlefield[index].ship = s;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t};\n\tconst receiveAttack = (x, y) => {\n\t\tconst box = getBox(x, y);\n\t\tif (box.hit) {\n\t\t\treturn null;\n\t\t}\n\n\t\tif (box.ship) {\n\t\t\tbox.hit = true;\n\t\t\tbox.ship.hit();\n\t\t\treturn true;\n\t\t} else {\n\t\t\tbox.hit = true;\n\t\t\tmissedAttacks.push(box);\n\t\t\treturn 1;\n\t\t}\n\t};\n\tconst canPlaceShip = (s, x, y) => {\n\t\tconst { length, vertical, id } = s;\n\t\tif (vertical) {\n\t\t\tlet c = x.charCodeAt(0);\n\t\t\tlet box;\n\t\t\tif (c + length > 75) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tfor (let i = 0; i < length; i++) {\n\t\t\t\tlet char = String.fromCharCode(c);\n\t\t\t\tc++;\n\t\t\t\tbox = getBox(char, y);\n\n\t\t\t\tif (box.ship && box.ship.id !== id) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn true;\n\t\t} else {\n\t\t\tif (y + length > 11) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tfor (let i = 0; i < length; i++) {\n\t\t\t\tlet c = y + i;\n\t\t\t\tlet box = getBox(x, c);\n\t\t\t\tif (box.ship && box.ship.id !== id) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t};\n\tconst allShipsSunk = () => {\n\t\tconst sunk = ships.every((x) => x.isSunk() === true);\n\n\t\treturn sunk;\n\t};\n\tconst autoFill = () => {\n\t\tplaceShips();\n\t};\n\tconst randomPlacing = () => {\n\t\tlet coords = availableMoves();\n\t\tconst length = coords.length;\n\t\tships.forEach((s) => {\n\t\t\tlet index = Math.floor(Math.random() * length);\n\t\t\tlet [x, y] = coords[index];\n\t\t\twhile (!canPlaceShip(s, x, y)) {\n\t\t\t\tlet index = Math.floor(Math.random() * length);\n\t\t\t\t[x, y] = coords[index];\n\t\t\t}\n\t\t\tmoveShip(s, x, y);\n\t\t});\n\t};\n\treturn {\n\t\trandomPlacing,\n\t\tcanPlaceShip,\n\t\tmoveShip,\n\t\tavailableMoves,\n\t\tplaceShips,\n\t\tgetBattlefield,\n\t\treceiveAttack,\n\t\tgetBox,\n\t\tmissed,\n\t\tallShipsSunk,\n\t\tautoFill,\n\t\tgetShips,\n\t};\n}\n\nexport default Gameboard;\n","function Player(id) {\n\tlet moves = [];\n\n\tconst randomAttack = (opponent) => {\n\t\tconst moves = opponent.availableMoves();\n\t\tconst length = moves.length;\n\t\tlet index = Math.floor(Math.random() * length);\n\t\tconst [x, y] = moves[index];\n\t\treturn attack(opponent, x, y);\n\t};\n\tconst attack = (opponent, x, y) => {\n\t\tlet result = opponent.receiveAttack(x, y);\n\t\tmoves.push([x, y]);\n\t\treturn result;\n\t};\n\treturn { id, attack, randomAttack };\n}\n\nexport default Player;\n","const itemTypes = {\n\tSHIP: 'ship',\n};\nexport default itemTypes;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { useDrag } from 'react-dnd';\nimport ItemTypes from '../utils/items';\nconst horizontal = (props) => {\n\tif (!props.vertical) {\n\t\treturn `${props.length * 32 + props.length - 1}px`;\n\t} else return '32px';\n};\nconst vertical = (props) => {\n\tif (props.vertical) {\n\t\treturn `${props.length * 32 + props.length - 1}px`;\n\t} else return '32px';\n};\n\nconst StyledShip = styled.div`\n\twidth: ${horizontal};\n\theight: ${vertical};\n\tpadding-right: 1px;\n\tpadding-bottom: 0px;\n\tz-index: ${(props) => (props.isDragging ? -1 : 10)};\n\tleft: 0;\n\ttop: 0;\n\tborder: 2px solid #00f;\n\tbackground: rgba(0, 0, 255, 0.05);\n\tposition: absolute !important;\n\tmargin: -2px;\n\tvisibility: ${(props) => (props.isDragging ? 'hidden' : '')};\n`;\n\nexport default function ShipC(props) {\n\tconst { ship } = props;\n\tconst [{ isDragging }, drag] = useDrag({\n\t\titem: {\n\t\t\tship,\n\n\t\t\ttype: ItemTypes.SHIP,\n\t\t},\n\t\tcanDrag: () => !props.gameStarted,\n\t\tcollect: (monitor) => ({\n\t\t\tisDragging: !!monitor.isDragging(),\n\t\t}),\n\t});\n\treturn (\n\t\t<StyledShip\n\t\t\tisDragging={isDragging}\n\t\t\tref={drag}\n\t\t\tonClick={() => {\n\t\t\t\tprops.onClick(props.ship);\n\t\t\t}}\n\t\t\tlength={props.length}\n\t\t\tvertical={props.vertical}></StyledShip>\n\t);\n}\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst StyledMarker = styled.div`\n\tposition: absolute;\n\tfont-size: 11px;\n\tz-index: -1;\n`;\n\nconst MarkerRow = styled(StyledMarker)`\n\tleft: -3em;\n\twidth: 2em;\n\ttext-align: right;\n\ttop: 1em;\n\theight: 1em;\n`;\n\nconst MarkerCol = styled(StyledMarker)`\n\ttop: -2em;\n\tleft: 0;\n\twidth: 100%;\n\ttext-align: center;\n`;\n\nexport default function Marker(x, y) {\n\tif (y === 1 && x === 'A') {\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<MarkerCol>{y}</MarkerCol>\n\t\t\t\t<MarkerRow>{x}</MarkerRow>\n\t\t\t</React.Fragment>\n\t\t);\n\t}\n\tif (y === 1) {\n\t\treturn <MarkerRow>{x}</MarkerRow>;\n\t} else if (x === 'A') {\n\t\treturn <MarkerCol>{y}</MarkerCol>;\n\t}\n}\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport { useDrop } from 'react-dnd';\nimport itemTypes from '../utils/items';\nconst StyledDiv = styled.div`\n\tposition: relative;\n\theight: 32px;\n\twidth: 32px;\n`;\n\nconst SunkShip = styled(StyledDiv)`\n\tborder-color: red;\n\tbackground: rgba(255, 0, 0, 0.05);\n\t&::after {\n\t\tcontent: '';\n\t\tdisplay: block;\n\t\theight: 2em;\n\t\twidth: 2em;\n\t\tborder: 1px solid red;\n\t\tmargin: -1px;\n\t\tposition: absolute;\n\t\tz-index: 3;\n\t\ttop: 0;\n\t\tleft: 0;\n\t}\n`;\nconst HitShip = styled.span`\n\theight: 100%;\n\twidth: 100%;\n\tposition: absolute;\n\ttop: 0;\n\tleft: 0;\n\tz-index: 1;\n\toverflow: hidden;\n\tbox-sizing: border-box;\n\n\t&::after {\n\t\ttop: 50%;\n\t\theight: 2px;\n\t\tleft: -25%;\n\t\twidth: 150%;\n\t\tmargin-left: -1px;\n\t\tcontent: '';\n\t\tposition: absolute;\n\t\tz-index: -1;\n\t\tbackground: red;\n\t\ttransform: rotate(-45deg);\n\t}\n\t&::before {\n\t\tleft: 50%;\n\t\twidth: 2px;\n\t\ttop: -25%;\n\t\theight: 150%;\n\t\tmargin-top: 1px;\n\t\tcontent: '';\n\t\tposition: absolute;\n\t\tz-index: -1;\n\t\tbackground: red;\n\t\ttransform: rotate(-45deg);\n\t}\n`;\n\nconst StyledBox = styled(StyledDiv)`\n\t&:hover {\n\t\tborder: 2px solid #40bf44;\n\t\tbackground: rgba(64, 191, 68, 0.05);\n\t\twidth: 32px;\n\t\theight: 32px;\n\t\tmargin: -2px;\n\t\tcursor: crosshair;\n\t\tz-index: 2;\n\t}\n`;\nconst StyledHitBox = styled(StyledDiv)`\n\tposition: relative;\n\tbackground-color: #eee;\n\t&::before {\n\t\tbackground-color: #333;\n\t\tposition: absolute;\n\t\twidth: 4px;\n\t\theight: 4px;\n\t\ttop: 50%;\n\t\tleft: 50%;\n\t\tcontent: '';\n\t\tborder-radius: 50%;\n\t\tmargin-top: -2px;\n\t\tmargin-left: -2px;\n\t}\n`;\nconst StyledTd = styled.td`\n\tborder: 1px solid #b4b4ff;\n\tpadding: 0;\n`;\n\nexport default function Box(props) {\n\tconst {\n\t\tplayer,\n\t\tonHit,\n\t\tonClick,\n\t\tship,\n\t\tchildren,\n\t\tmoveShip,\n\t\tx,\n\t\ty,\n\t\tcanPlace,\n\t} = props;\n\tconst [{ isOver }, drop] = useDrop({\n\t\taccept: itemTypes.SHIP,\n\t\tcanDrop: (item, monitor) => canPlace(item.ship, x, y),\n\n\t\tdrop: (item, monitor) => {\n\t\t\tconsole.log('drop', x, y);\n\t\t\tmoveShip(item.ship, x, y);\n\t\t},\n\t\tcollect: (monitor) => ({\n\t\t\tisOver: !!monitor.isOver(),\n\t\t}),\n\t});\n\tconst renderBox = () => {\n\t\tif (player === 'computer') {\n\t\t\tif (onHit) {\n\t\t\t\tif (ship) {\n\t\t\t\t\tif (ship.isSunk()) {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<SunkShip>\n\t\t\t\t\t\t\t\t<HitShip></HitShip>\n\t\t\t\t\t\t\t\t{children}\n\t\t\t\t\t\t\t</SunkShip>\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<StyledBox>\n\t\t\t\t\t\t\t<HitShip></HitShip>\n\t\t\t\t\t\t\t{children}\n\t\t\t\t\t\t</StyledBox>\n\t\t\t\t\t);\n\t\t\t\t} else return <StyledHitBox>{children}</StyledHitBox>; //empty cell\n\t\t\t} else return <StyledBox onClick={onClick}>{children}</StyledBox>; //standard cell\n\t\t}\n\t\t//player cells\n\t\telse if (player === 'player') {\n\t\t\tif (onHit) {\n\t\t\t\tif (ship) {\n\t\t\t\t\tif (ship.isSunk()) {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<SunkShip>\n\t\t\t\t\t\t\t\t<HitShip></HitShip>\n\t\t\t\t\t\t\t\t{children}\n\t\t\t\t\t\t\t</SunkShip>\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<StyledBox>\n\t\t\t\t\t\t\t<HitShip></HitShip>\n\t\t\t\t\t\t\t{children}\n\t\t\t\t\t\t</StyledBox>\n\t\t\t\t\t);\n\t\t\t\t} else return <StyledHitBox>{children}</StyledHitBox>; //empty hit cell\n\t\t\t} else return <StyledDiv ref={drop}>{children}</StyledDiv>; //standard cell\n\t\t}\n\t};\n\n\treturn <StyledTd>{renderBox()}</StyledTd>;\n}\n","import React from 'react';\nimport styled from 'styled-components';\nimport ShipC from './Ship';\nimport Marker from './Marker';\nimport Box from './Box';\n\nconst StyledDiv = styled.div`\n\tposition: relative;\n\tfloat: left;\n\twidth: 50%;\n\topacity: ${(props) => (props.gameOver ? 0.4 : 1)};\n\tpointer-events: ${(props) => (props.gameOver ? 'none' : 'auto')};\n`;\nconst Row = styled.tr`\n\tmargin: 0;\n\tpadding: 0;\n\tborder: 0;\n\tfont: inherit;\n\tfont-size: 100%;\n\tvertical-align: baseline;\n`;\n\nconst Table = styled.table`\n\tmargin-left: 50px;\n\tborder-collapse: collapse;\n\tcursor: default;\n\tdisplay: inline-block;\n\tposition: relative;\n`;\n\nexport default function Board(props) {\n\tconst { board, gameOver, shipClick, moveShip, gameStarted } = props;\n\t// gb.autoFill();\n\tconst field = board.getBattlefield();\n\n\tconst ships = board.getShips();\n\n\tconst renderShip = (x, y) => {\n\t\tlet ship = ships.find((s) => s.coords[0] === x && s.coords[1] === y);\n\t\tif (ship) {\n\t\t\treturn (\n\t\t\t\t<ShipC\n\t\t\t\t\tkey={ship.id}\n\t\t\t\t\tship={ship}\n\t\t\t\t\tonClick={shipClick}\n\t\t\t\t\tlength={ship.length}\n\t\t\t\t\tid={ship.id}\n\t\t\t\t\tvertical={ship.vertical}\n\t\t\t\t\tgameStarted={gameStarted}\n\t\t\t\t/>\n\t\t\t);\n\t\t} else return null;\n\t};\n\tconst renderBox = (box) => {\n\t\tconst [x, y] = [box.X, box.Y];\n\n\t\treturn (\n\t\t\t<Box\n\t\t\t\tcanPlace={board.canPlaceShip}\n\t\t\t\tmoveShip={moveShip}\n\t\t\t\tkey={'pBoard' + [x, y]}\n\t\t\t\tx={x}\n\t\t\t\ty={y}\n\t\t\t\tonHit={box.hit}\n\t\t\t\tship={box.ship}\n\t\t\t\tplayer={'player'}>\n\t\t\t\t{renderShip(x, y)}\n\t\t\t\t{Marker(x, y)}\n\t\t\t</Box>\n\t\t);\n\t};\n\n\tconst rows = field\n\t\t.map((b) => {\n\t\t\treturn renderBox(b);\n\t\t})\n\t\t.reduce((row, el, i) => {\n\t\t\ti % 10 === 0 && row.push([]);\n\t\t\trow[row.length - 1].push(el);\n\t\t\treturn row;\n\t\t}, [])\n\t\t.map((r, i) => {\n\t\t\treturn <Row key={i}>{r}</Row>;\n\t\t});\n\n\treturn (\n\t\t<StyledDiv gameOver={gameOver}>\n\t\t\t<Table>\n\t\t\t\t<tbody>{rows}</tbody>\n\t\t\t</Table>\n\t\t</StyledDiv>\n\t);\n}\n","import React from 'react';\nimport styled from 'styled-components';\nimport Box from './Box';\nimport Marker from './Marker';\n\nconst StyledDiv = styled.div`\n\tfloat: right;\n\twidth: 50%;\n\tposition: relative;\n\topacity: ${(props) =>\n\t\tprops.turn || props.gameOver || !props.gameStarted ? 0.4 : 1};\n\tpointer-events: ${(props) =>\n\t\tprops.turn || props.gameOver || !props.gameStarted ? 'none' : 'auto'};\n`;\nconst Row = styled.tr`\n\tmargin: 0;\n\tpadding: 0;\n\tborder: 0;\n\tfont: inherit;\n\tfont-size: 100%;\n\tvertical-align: baseline;\n`;\n\nconst Table = styled.table`\n\tmargin: 0;\n\tborder-collapse: collapse;\n\tcursor: default;\n\tdisplay: inline-block;\n\tposition: relative;\n`;\n\nexport default function CpuBoard(props) {\n\tconst { board, attack, turn, gameOver, gameStarted } = props;\n\n\tconst field = board.getBattlefield();\n\n\tconst ships = board.getShips();\n\n\tconsole.log(ships);\n\tconst rows = field\n\t\t.map((b) => {\n\t\t\tconst [x, y] = [b.X, b.Y];\n\n\t\t\treturn (\n\t\t\t\t<Box\n\t\t\t\t\tkey={'cBoard' + [x, y]}\n\t\t\t\t\tonHit={b.hit}\n\t\t\t\t\tship={b.ship}\n\t\t\t\t\tplayer={'computer'}\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tattack(x, y, board);\n\t\t\t\t\t}}>\n\t\t\t\t\t{Marker(x, y)}\n\t\t\t\t</Box>\n\t\t\t);\n\t\t})\n\t\t.reduce((row, el, i) => {\n\t\t\ti % 10 === 0 && row.push([]);\n\t\t\trow[row.length - 1].push(el);\n\t\t\treturn row;\n\t\t}, [])\n\t\t.map((r, i) => {\n\t\t\treturn <Row key={i}>{r}</Row>;\n\t\t});\n\n\treturn (\n\t\t<StyledDiv turn={turn} gameOver={gameOver} gameStarted={gameStarted}>\n\t\t\t<Table>\n\t\t\t\t<tbody>{rows}</tbody>\n\t\t\t</Table>\n\t\t</StyledDiv>\n\t);\n}\n","import React from 'react';\nimport styled from 'styled-components';\nconst Wrapper = styled.div`\n\tmargin-top: 30px;\n\ttext-align: center;\n`;\nconst Play = styled.a`\n\tbackground-color: #97e673;\n\tborder-radius: 15px;\n\tdisplay: inline-block;\n\tcursor: pointer;\n\tcolor: #ffffff;\n\tfont-family: Arial;\n\tfont-size: 15px;\n\tfont-weight: bold;\n\tpadding: 10px 25px;\n\ttext-decoration: none;\n\tpointer-events: ${(props) => (props.disabled ? 'none' : 'initial')};\n\topacity: ${(props) => (props.disabled ? 0.5 : 1)};\n\t&:hover {\n\t\tbackground-color: #59b02e;\n\t}\n\t&:active {\n\t\tposition: relative;\n\t\ttop: 1px;\n\t}\n`;\nexport default function Button(props) {\n\treturn (\n\t\t<Wrapper>\n\t\t\t<Play onClick={props.onClick} disabled={props.disabled}>\n\t\t\t\tPlay\n\t\t\t</Play>\n\t\t\t{props.children}\n\t\t</Wrapper>\n\t);\n}\n","import React, { Component } from 'react';\nimport Gameboard from '../Game/gameboard';\nimport Player from '../Game/Player';\nimport styled from 'styled-components';\nimport Board from './Board';\nimport CpuBoard from './CpuBoard';\nimport Button from './Button';\nconst Battelfields = styled.div`\n\twidth: 100%;\n\tpadding-top: 80px;\n\tmargin-left: 80px;\n\t-webkit-user-select: none;\n\t-moz-user-select: none;\n\t-ms-user-select: none;\n\tuser-select: none;\n\toverflow: hidden;\n`;\nconst Header = styled.header`\n\ttext-align: center;\n`;\nconst Winner = styled.div`\n\ttext-align: center;\n`;\nclass Battleship extends Component {\n\tstate = {\n\t\tpBoard: Gameboard(),\n\t\tcBoard: Gameboard(),\n\t\tplayer: Player('player'),\n\t\tcomputer: Player('computer'),\n\t\tplayerTurn: true,\n\t\tturn: false,\n\t\tgameStarted: false,\n\t\tgameOver: false,\n\t};\n\n\tattackBoard = (x, y, board) => {\n\t\tif (this.gameOver()) {\n\t\t\treturn;\n\t\t}\n\t\tlet turn = this.state.playerTurn;\n\t\tlet player = this.state.player;\n\t\tif (turn) {\n\t\t\tlet bf = Object.assign({}, board); // DA CAMBIARE\n\t\t\tif (player.attack(bf, x, y) === true) {\n\t\t\t\tthis.setState({ cBoard: bf });\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis.setState({ cBoard: bf });\n\n\t\t\tthis.setState({ playerTurn: !turn });\n\t\t\tthis.setState({ turn: true });\n\n\t\t\tthis.computerAttacks();\n\t\t\tconsole.log(bf.getBox(x, y));\n\t\t} else return;\n\t};\n\tcomputerAttacks = () => {\n\t\tsetTimeout(() => {\n\t\t\tconsole.log('computer attack');\n\t\t\tif (this.gameOver()) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tlet bf = Object.assign({}, this.state.pBoard);\n\t\t\tlet computer = this.state.computer;\n\t\t\tif (computer.randomAttack(bf) === true) {\n\t\t\t\tthis.setState({ pBoard: bf });\n\t\t\t\tthis.computerAttacks();\n\t\t\t} else {\n\t\t\t\tthis.setState({ pBoard: bf });\n\t\t\t\tthis.setState({ playerTurn: true });\n\t\t\t\tthis.setState({ turn: false });\n\t\t\t}\n\t\t}, 1000);\n\t};\n\tcomponentWillMount() {\n\t\tconsole.log('Mounted');\n\t\tlet p = this.state.pBoard;\n\t\tlet c = this.state.cBoard;\n\t\tp.autoFill();\n\t\tc.autoFill();\n\t\tc.randomPlacing();\n\t\tthis.setState({ pBoard: p });\n\t\tthis.setState({ cBoard: c });\n\t}\n\tshipClick = (s) => {\n\t\tthis.setState({ temp: s });\n\t\tconsole.log(s);\n\t};\n\thandleShip = (x, y) => {\n\t\tconst board = Object.assign({}, this.state.pBoard);\n\t\tboard.moveShip(this.state.temp, x, y);\n\t\tthis.setState({ pBoard: board });\n\t};\n\tmoveShip = (s, x, y) => {\n\t\tconst board = Object.assign({}, this.state.pBoard);\n\t\tboard.moveShip(s, x, y);\n\t\tconsole.log(board.getBox(x, y));\n\t\tthis.setState({ pBoard: board });\n\t};\n\n\tstartGame = () => {\n\t\tthis.setState({ gameStarted: true });\n\t\tconsole.log('play');\n\t};\n\tgameOver() {\n\t\tconst go1 = this.state.pBoard;\n\t\tconst go2 = this.state.cBoard;\n\t\tif (go1.allShipsSunk() || go2.allShipsSunk()) {\n\t\t\tthis.setState({ gameOver: true });\n\t\t\treturn true;\n\t\t}\n\t}\n\tgetWinner() {\n\t\tconst boards = [this.state.pBoard, this.state.cBoard];\n\t\tif (boards[0].allShipsSunk()) {\n\t\t\treturn 'Computer won!';\n\t\t} else if (boards[1].allShipsSunk()) {\n\t\t\treturn 'You won!';\n\t\t}\n\t}\n\trender() {\n\t\tconsole.log('render');\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<Header>\n\t\t\t\t\t<h1>Battleship</h1>\n\t\t\t\t</Header>\n\t\t\t\t<Button onClick={this.startGame} disabled={this.state.gameStarted}>\n\t\t\t\t\t{!this.state.gameStarted && (\n\t\t\t\t\t\t<h3> Move your ships and click play to start</h3>\n\t\t\t\t\t)}\n\t\t\t\t</Button>\n\n\t\t\t\t<Battelfields>\n\t\t\t\t\t<Board\n\t\t\t\t\t\tboard={this.state.pBoard}\n\t\t\t\t\t\tgameStarted={this.state.gameStarted}\n\t\t\t\t\t\tgameOver={this.state.gameOver}\n\t\t\t\t\t\tshipClick={this.shipClick}\n\t\t\t\t\t\tmoveShip={this.moveShip}></Board>\n\t\t\t\t\t<CpuBoard\n\t\t\t\t\t\tboard={this.state.cBoard}\n\t\t\t\t\t\tattack={this.attackBoard}\n\t\t\t\t\t\tturn={this.state.turn}\n\t\t\t\t\t\tgameStarted={this.state.gameStarted}\n\t\t\t\t\t\tgameOver={this.state.gameOver}></CpuBoard>\n\t\t\t\t</Battelfields>\n\t\t\t\t<Winner>{this.state.gameOver && <h3>{this.getWinner()} </h3>}</Winner>\n\t\t\t</React.Fragment>\n\t\t);\n\t}\n}\n\nexport default Battleship;\n","import React from 'react';\nimport styled from 'styled-components';\nimport Battleship from './Components/Battleship';\n\nimport { DndProvider } from 'react-dnd';\nimport { HTML5Backend } from 'react-dnd-html5-backend';\n\nconst Wrapper = styled.div`\n\tmin-width: 990px;\n\tmax-width: 1080px;\n\tmin-height: 100%;\n\tposition: relative;\n\tmargin: 0 auto;\n\tz-index: 1;\n\tbackground: #fff;\n`;\n\nfunction App() {\n\treturn (\n\t\t<DndProvider backend={HTML5Backend}>\n\t\t\t<Wrapper>\n\t\t\t\t<Battleship></Battleship>\n\t\t\t</Wrapper>\n\t\t</DndProvider>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createGlobalStyle } from 'styled-components';\n\nconst GlobalStyle = createGlobalStyle`\nhtml {\n    min-height: 100%;\n    height: 100%;\n}\nbody {\n    font: 1em/1.25 \"PT Sans\",arial,sans-serif;\n\tmargin: 0;\n    padding: 0;\n    position: relative;\n    overflow-y: scroll;\n    cursor: default;\n    min-height: 100%;\n    background: #fff;\n    height: 100%;\n}\n`;\n\nconst ReactApp = () => (\n\t<React.StrictMode>\n\t\t<GlobalStyle />\n\t\t<App />\n\t</React.StrictMode>\n);\n\nReactDOM.render(ReactApp(), document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}